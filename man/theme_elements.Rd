% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/theme.R, R/theme-elements.R
\name{theme}
\alias{elements}
\alias{newelements}
\alias{newtheme}
\alias{newthemes}
\alias{panel.margin.tern}
\alias{tern.axis}
\alias{tern.axis.arrow}
\alias{tern.axis.arrow.L}
\alias{tern.axis.arrow.R}
\alias{tern.axis.arrow.T}
\alias{tern.axis.arrow.text}
\alias{tern.axis.arrow.text.L}
\alias{tern.axis.arrow.text.R}
\alias{tern.axis.arrow.text.T}
\alias{tern.axis.arrowfinish}
\alias{tern.axis.arrowsep}
\alias{tern.axis.arrowstart}
\alias{tern.axis.clockwise}
\alias{tern.axis.hshift}
\alias{tern.axis.line}
\alias{tern.axis.line.L}
\alias{tern.axis.line.R}
\alias{tern.axis.line.T}
\alias{tern.axis.padding}
\alias{tern.axis.showarrows}
\alias{tern.axis.showgrid.major}
\alias{tern.axis.showgrid.minor}
\alias{tern.axis.showlabels}
\alias{tern.axis.showtitles}
\alias{tern.axis.text}
\alias{tern.axis.text.L}
\alias{tern.axis.text.R}
\alias{tern.axis.text.T}
\alias{tern.axis.ticklength.major}
\alias{tern.axis.ticklength.minor}
\alias{tern.axis.ticks}
\alias{tern.axis.ticks.major}
\alias{tern.axis.ticks.major.L}
\alias{tern.axis.ticks.major.R}
\alias{tern.axis.ticks.major.T}
\alias{tern.axis.ticks.minor}
\alias{tern.axis.ticks.minor.L}
\alias{tern.axis.ticks.minor.R}
\alias{tern.axis.ticks.minor.T}
\alias{tern.axis.ticks.outside}
\alias{tern.axis.ticks.showprimary}
\alias{tern.axis.ticks.showsecondary}
\alias{tern.axis.title}
\alias{tern.axis.title.L}
\alias{tern.axis.title.R}
\alias{tern.axis.title.T}
\alias{tern.axis.vshift}
\alias{tern.panel.background}
\alias{tern.panel.expand}
\alias{tern.panel.grid}
\alias{tern.panel.grid.major}
\alias{tern.panel.grid.major.L}
\alias{tern.panel.grid.major.R}
\alias{tern.panel.grid.major.T}
\alias{tern.panel.grid.minor}
\alias{tern.panel.grid.minor.L}
\alias{tern.panel.grid.minor.R}
\alias{tern.panel.grid.minor.T}
\alias{tern.panel.grids.ontop}
\alias{tern.panel.rotate}
\alias{tern.plot.background}
\alias{ternary.options}
\alias{theme}
\alias{theme-tern}
\alias{theme_elements}
\alias{themeelements}
\title{New Theme Elements}
\usage{
theme(..., complete = FALSE)
}
\arguments{
\item{...}{a list of element name, element pairings that modify the
existing theme.}

\item{complete}{set this to TRUE if this is a complete theme, such as
the one returned \code{by theme_grey()}. Complete themes behave
differently when added to a ggplot object.}
}
\description{
\code{ggtern} creates many new theme elements and inheritances, the following is an outline:
}
\details{
Theme elements can inherit properties from other theme elements.
For example, \code{axis.title.x} inherits from \code{axis.title}, 
which in turn inherits from \code{text}. All text elements inherit
directly or indirectly from \code{text}; all lines inherit from
\code{line}, and all rectangular objects inherit from \code{rect}.

Modifying the newly created items requires the same procedures as introduced in the ggplot2 \code{\link[ggplot2]{theme}} documentation.
Some convenience functions have been also newly created, proceed to \code{\link{convenience}} for additional information.
}
\section{New/Additional Inheritance Structures}{

\Sexpr[results=rd,stage=build]{ggtern:::rd_theme()}
**  \strong{NB:} \code{tern.panel.background}, whilst the ternary area is 'triangular' per-se, \code{\link{element_rect}} has been used, 
as it actually holds NO information regarding the geometry (width, height), only fill, color, 
size and linetype border (ie the style of how it will be rendered).
}

